name: Fullstack CI/CD to EC2

on:
  push:
    branches: [main]

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      - name: Start Backend
        run: |
          cd backend
          nohup npm run dev &

      - name: Wait for Backend to be Ready
        run: |
          until nc -z localhost 3000; do echo "⏳ Waiting for backend on port 3000..."; sleep 1; done

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd frontend
          npx playwright install --with-deps

      - name: Start Frontend App
        run: |
          cd frontend
          nohup npm run dev -- --port 5174 & 
          sleep 5

      - name: Run Playwright Tests
        run: |
          cd frontend
          npx playwright test || exit 1

  deploy:
    name: Deploy to EC2
    needs: test
    runs-on: ubuntu-latest
    if: ${{ needs.test.result == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Project Files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "~/app"

      - name: Restart Backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app/backend
            npm install
            npm run build
            pm2 describe backend > /dev/null \
              && pm2 restart backend \
              || pm2 start npm --name backend -- start

      - name: Deploy Frontend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app/frontend
            npm install
            npm run build
            sudo cp -r dist/* /usr/share/nginx/html

  notify:
    name: Send Email Notification
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Determine result
        run: |
          if [ "${{ needs.test.result }}" == "failure" ]; then
            echo "STATUS=❌ Playwright Tests Failed" >> $GITHUB_ENV
            echo "SUCCESS=false" >> $GITHUB_ENV
          elif [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "STATUS=✅ Deployment Successful" >> $GITHUB_ENV
            echo "SUCCESS=true" >> $GITHUB_ENV
          else
            echo "STATUS=⚠️ Deployment Skipped or Failed" >> $GITHUB_ENV
            echo "SUCCESS=false" >> $GITHUB_ENV
          fi

      - name: Send Email
        if: env.SUCCESS == 'false' || env.SUCCESS == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          from: ${{ secrets.EMAIL_USER }}
          to: ${{ secrets.EMAIL_TO_LIST }}  # Comma-separated list in secret
          subject: "${{ env.STATUS }} - GitHub CI/CD Notification"
          body: |
            Hello,

            CI/CD pipeline result: ${{ env.STATUS }}

            ➤ Repository: ${{ github.repository }}
            ➤ Commit: ${{ github.sha }}
            ➤ Branch: ${{ github.ref }}
            ➤ Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Regards,
            GitHub Actions Bot